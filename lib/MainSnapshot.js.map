{"version":3,"file":"MainSnapshot.js","sourceRoot":"","sources":["../src/MainSnapshot.ts"],"names":[],"mappings":";;;AAAA;;;+FAG+F;AAC/F,4DAAuD;AACvD,gEAAmE;AACnE,iDAA8C;AAC9C,yBAAyB;AAElB,KAAK,UAAU,YAAY,CAAC,OAAuB;IACxD,IAAI;QACF,IAAI,QAAQ,CAAC;QAEb,MAAM,QAAQ,GAAW,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACzC,MAAM,IAAI,GAAW,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAErC,MAAM,6BAAU,CAAC,OAAO,EAAE,CAAC;QAE3B,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,OAAO,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;YACvC,OAAO;SACR;QACD,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAC5B,OAAO,CAAC,KAAK,CAAC,0CAA0C,QAAQ,GAAG,CAAC,CAAC;YACrE,OAAO;SACR;QACD,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,QAAQ,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;SAC/C;aAAM;YACL,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;SAC1B;QAED,MAAM,YAAY,GAAG,QAAQ,CAAC;QAC9B,MAAM,QAAQ,GAAG,6BAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QACnD,MAAM,QAAQ,GAAG,IAAI,2BAAY,CAAC,QAAQ,CAAC,CAAC;QAC5C,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEpC,KAAK,MAAM,QAAQ,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACpD,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,WAAW,GAAG,GAAG,MAAM,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,MAAM,CAAC;YAClF,MAAM,QAAQ,CAAC,sBAAsB,CAAC,MAAM,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;SAClF;QAED,QAAQ,CAAC,KAAK,EAAE,CAAC;KAClB;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,OAAO,OAAO,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;KACrD;YAAS;QACR,MAAM,6BAAU,CAAC,QAAQ,EAAE,CAAC;KAC7B;AACH,CAAC;AAxCD,oCAwCC;AAED,uDAAuD;AACvD,IAAI,OAAO,CAAC,IAAI,KAAK,MAAM,EAAE;IAC3B,CAAC,KAAK,IAAI,EAAE;QACV,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;YACzB,MAAM,IAAI,KAAK,CAAC,iFAAiF,CAAC,CAAC;QAErG,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;;QACjB,IAAI,GAAG,YAAY,6BAAY;YAC7B,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;;YAE3D,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;QACxD,OAAO,CAAC,IAAI,CAAC,MAAA,GAAG,CAAC,WAAW,mCAAI,CAAC,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;CACJ","sourcesContent":["/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\nimport { BentleyError } from \"@bentley/bentleyjs-core\";\nimport { IModelHost, SnapshotDb } from \"@bentley/imodeljs-backend\";\nimport { DataExporter } from \"./DataExporter\";\nimport * as fs from \"fs\";\n\nexport async function mainSnapshot(process: NodeJS.Process): Promise<void> {\n  try {\n    let userdata;\n\n    const fileName: string = process.argv[2];\n    const json: string = process.argv[3];\n\n    await IModelHost.startup();\n\n    if (fileName === undefined) {\n      console.error(\"Filename not provided\");\n      return;\n    }\n    if (!fs.existsSync(fileName)) {\n      console.error(`Could not find the iModel at location '${fileName}'`);\n      return;\n    }\n    if (json === undefined) {\n      userdata = require(\"../queries/example.json\");\n    } else {\n      userdata = require(json);\n    }\n\n    const sourceDbFile = fileName;\n    const sourceDb = SnapshotDb.openFile(sourceDbFile);\n    const exporter = new DataExporter(sourceDb);\n    exporter.setFolder(userdata.folder);\n\n    for (const querykey of Object.keys(userdata.queries)) {\n      const aQuery = userdata.queries[querykey];\n      const outFileName = `${aQuery.store !== undefined ? aQuery.store : querykey}.csv`;\n      await exporter.writeQueryResultsToCsv(aQuery.query, outFileName, aQuery.options);\n    }\n\n    sourceDb.close();\n  } catch (error) {\n    console.error(`${error.message} \\n ${error.stack}`);\n  } finally {\n    await IModelHost.shutdown();\n  }\n}\n\n// invoke main if MainSnapshot.js is being run directly\nif (require.main === module) {\n  (async () => {\n    if (process.argv.length < 3)\n      throw new Error(\"Please provide valid arguments: npm run start:snapshot <file path> <query.json>\");\n\n    await mainSnapshot(process);\n  })().catch((err) => {\n    if (err instanceof BentleyError)\n      process.stderr.write(`Error: ${err.name}: ${err.message}`);\n    else\n      process.stderr.write(`Unknown error: ${err.message}`);\n    process.exit(err.errorNumber ?? -1);\n  });\n}\n"]}