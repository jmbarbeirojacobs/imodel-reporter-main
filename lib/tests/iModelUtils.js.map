{"version":3,"file":"iModelUtils.js","sourceRoot":"","sources":["../../src/tests/iModelUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*---------------------------------------------------------------------------------------------\n* Copyright (c) Bentley Systems, Incorporated. All rights reserved.\n* See LICENSE.md in the project root for license terms and full copyright notice.\n*--------------------------------------------------------------------------------------------*/\nimport { Id64, Id64String } from \"@bentley/bentleyjs-core\";\nimport { Range3d } from \"@bentley/geometry-core\";\nimport { AuxCoordSystem2d, BackendRequestContext, CategorySelector, DefinitionModel, DocumentListModel, Drawing, DrawingCategory, ElementOwnsMultiAspects, ElementOwnsUniqueAspect, FunctionalSchema, GroupModel, IModelDb, InformationRecordModel, ModelSelector, PhysicalModel, Platform, SpatialCategory, SpatialLocationModel, SubCategory, Subject } from \"@bentley/imodeljs-backend\";\nimport { AuxCoordSystem2dProps, Code, CodeScopeSpec, ColorDef, FontType, IModel, SubCategoryAppearance } from \"@bentley/imodeljs-common\";\nimport { assert } from \"chai\";\nimport * as path from \"path\";\n\nexport async function prepareSourceDb(sourceDb: IModelDb): Promise<void> {\n  const requestContext = new BackendRequestContext();\n  const sourceSchemaFileName: string = path.join(__dirname, \"assets\", \"TestPropsSchema-33.01.00.00.ecschema.xml\");\n  try {\n    await sourceDb.importSchemas(requestContext, [sourceSchemaFileName]);\n  } catch (e) {\n    console.log(e);\n  }\n\n  FunctionalSchema.registerSchema();\n}\n\nfunction insertSpatialCategory(iModelDb: IModelDb, modelId: Id64String, categoryName: string, color: ColorDef): Id64String {\n  const appearance: SubCategoryAppearance.Props = {\n    color: color.toJSON(),\n    transp: 0,\n    invisible: false,\n  };\n  return SpatialCategory.insert(iModelDb, modelId, categoryName, appearance);\n}\n\nexport function populateSourceDb(sourceDb: IModelDb): void {\n  if (Platform.platformName.startsWith(\"win\")) {\n    sourceDb.embedFont({ id: 1, type: FontType.TrueType, name: \"Arial\" });\n    assert.exists(sourceDb.fontMap.getFont(\"Arial\"));\n    assert.exists(sourceDb.fontMap.getFont(1));\n  }\n  // initialize project extents\n  const projectExtents = new Range3d(-1000, -1000, -1000, 1000, 1000, 1000);\n  sourceDb.updateProjectExtents(projectExtents);\n\n  // insert CodeSpecs\n  const codeSpecId1: Id64String = sourceDb.codeSpecs.insert(\"SourceCodeSpec\", CodeScopeSpec.Type.Model);\n  const codeSpecId2: Id64String = sourceDb.codeSpecs.insert(\"ExtraCodeSpec\", CodeScopeSpec.Type.ParentElement);\n  const codeSpecId3: Id64String = sourceDb.codeSpecs.insert(\"InformationRecords\", CodeScopeSpec.Type.Model);\n  assert.isTrue(Id64.isValidId64(codeSpecId1));\n  assert.isTrue(Id64.isValidId64(codeSpecId2));\n  assert.isTrue(Id64.isValidId64(codeSpecId3));\n\n  // insert RepositoryModel structure\n  const subjectId = Subject.insert(sourceDb, IModel.rootSubjectId, \"Subject\", \"Subject Description\");\n  assert.isTrue(Id64.isValidId64(subjectId));\n  const sourceOnlySubjectId = Subject.insert(sourceDb, IModel.rootSubjectId, \"Only in Source\");\n  assert.isTrue(Id64.isValidId64(sourceOnlySubjectId));\n  const definitionModelId = DefinitionModel.insert(sourceDb, subjectId, \"Definition\");\n  assert.isTrue(Id64.isValidId64(definitionModelId));\n  const informationModelId = InformationRecordModel.insert(sourceDb, subjectId, \"Information\");\n  assert.isTrue(Id64.isValidId64(informationModelId));\n  const groupModelId = GroupModel.insert(sourceDb, subjectId, \"Group\");\n  assert.isTrue(Id64.isValidId64(groupModelId));\n  const physicalModelId = PhysicalModel.insert(sourceDb, subjectId, \"Physical\");\n  assert.isTrue(Id64.isValidId64(physicalModelId));\n  const spatialLocationModelId = SpatialLocationModel.insert(sourceDb, subjectId, \"SpatialLocation\", true);\n  assert.isTrue(Id64.isValidId64(spatialLocationModelId));\n  // const functionalModelId = FunctionalModel.insert(sourceDb, subjectId, \"Functional\");\n  // assert.isTrue(Id64.isValidId64(functionalModelId));\n  const documentListModelId = DocumentListModel.insert(sourceDb, subjectId, \"Document\");\n  assert.isTrue(Id64.isValidId64(documentListModelId));\n  const drawingId = Drawing.insert(sourceDb, documentListModelId, \"Drawing\");\n  assert.isTrue(Id64.isValidId64(drawingId));\n  // insert DefinitionElements\n  const modelSelectorId = ModelSelector.insert(sourceDb, definitionModelId, \"SpatialModels\", [physicalModelId, spatialLocationModelId]);\n  assert.isTrue(Id64.isValidId64(modelSelectorId));\n  const spatialCategoryId = insertSpatialCategory(sourceDb, definitionModelId, \"SpatialCategory\", ColorDef.green);\n  assert.isTrue(Id64.isValidId64(spatialCategoryId));\n  const sourcePhysicalCategoryId = insertSpatialCategory(sourceDb, definitionModelId, \"SourcePhysicalCategory\", ColorDef.blue);\n  assert.isTrue(Id64.isValidId64(sourcePhysicalCategoryId));\n  const subCategoryId = SubCategory.insert(sourceDb, spatialCategoryId, \"SubCategory\", { color: ColorDef.blue.toJSON() });\n  assert.isTrue(Id64.isValidId64(subCategoryId));\n  const drawingCategoryId = DrawingCategory.insert(sourceDb, definitionModelId, \"DrawingCategory\", new SubCategoryAppearance());\n  assert.isTrue(Id64.isValidId64(drawingCategoryId));\n  // tslint:disable-next-line: max-line-length\n  const spatialCategorySelectorId = CategorySelector.insert(sourceDb, definitionModelId, \"SpatialCategories\", [spatialCategoryId, sourcePhysicalCategoryId]);\n  assert.isTrue(Id64.isValidId64(spatialCategorySelectorId));\n  const drawingCategorySelectorId = CategorySelector.insert(sourceDb, definitionModelId, \"DrawingCategories\", [drawingCategoryId]);\n  assert.isTrue(Id64.isValidId64(drawingCategorySelectorId));\n  const auxCoordSystemProps: AuxCoordSystem2dProps = {\n    classFullName: AuxCoordSystem2d.classFullName,\n    model: definitionModelId,\n    code: AuxCoordSystem2d.createCode(sourceDb, definitionModelId, \"AuxCoordSystem2d\"),\n  };\n  const auxCoordSystemId = sourceDb.elements.insertElement(auxCoordSystemProps);\n  assert.isTrue(Id64.isValidId64(auxCoordSystemId));\n\n  const toolBox = {\n    classFullName: \"TestPropsSchema:ToolBox\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    category: spatialCategoryId,\n    bestTool: {\n      name: \"Hammer\",\n      weight: \"42.42\",\n    },\n    worstTool: {\n      name: \"Feather\",\n    },\n    tools: [\n      {\n        name: \"Saw\",\n        weight: \"11.02\",\n      },\n      {\n        name: \"Drill\",\n        weight: \"100.1\",\n      },\n    ],\n  };\n  const toolBoxId = sourceDb.elements.insertElement(toolBox);\n  assert.isTrue(Id64.isValidId64(toolBoxId));\n\n  const people = {\n    classFullName: \"TestPropsSchema:People\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    category: spatialCategoryId,\n    PersonA: {\n      Age: 52,\n      Name: \"John\",\n      PersonIQ: {\n        Memory: 6,\n        Perception: 8,\n      },\n    },\n  };\n  const peopleId = sourceDb.elements.insertElement(people);\n  assert.isTrue(Id64.isValidId64(peopleId));\n\n  const aspectElement = {\n    classFullName: \"TestPropsSchema:AspectElement\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    category: spatialCategoryId,\n    Type: \"AspectOwningElement\",\n  };\n  const aspectElementId = sourceDb.elements.insertElement(aspectElement);\n  assert.isTrue(Id64.isValidId64(aspectElementId));\n\n  const uniqueAspect = {\n    classFullName: \"TestPropsSchema:TestUniqueAspect\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    element: new ElementOwnsUniqueAspect(aspectElementId),\n    category: spatialCategoryId,\n    Diameter: 12,\n  };\n  sourceDb.elements.insertAspect(uniqueAspect);\n\n  const multiAspect = {\n    classFullName: \"TestPropsSchema:TestMultiAspect\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    element: new ElementOwnsMultiAspects(aspectElementId),\n    category: spatialCategoryId,\n    TextSize: 5.5,\n    TextFont: \"Italics\",\n    Color: 2,\n  };\n  sourceDb.elements.insertAspect(multiAspect);\n\n  const keywordsElement = {\n    classFullName: \"TestPropsSchema:KeyWordsElement\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    category: spatialCategoryId,\n    Offset: \"FooBar\",\n    Count: 12,\n    Limit: 10,\n    Select: 10,\n  };\n  const keywordsElementId = sourceDb.elements.insertElement(keywordsElement);\n  assert.isTrue(Id64.isValidId64(keywordsElementId));\n\n  const testPhysicalType = {\n    classFullName: \"TestPropsSchema:TestPhysicalType\",\n    model: definitionModelId,\n    code: Code.createEmpty(),\n    category: spatialCategoryId,\n  };\n  const testPhysicalTypeId = sourceDb.elements.insertElement(testPhysicalType);\n  assert.isTrue(Id64.isValidId64(testPhysicalTypeId));\n\n  const testGeometricElement3d = {\n    classFullName: \"TestPropsSchema:TestGeomertric3dElement\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    category: spatialCategoryId,\n    typeDefinition: { id: testPhysicalTypeId, relClassName: \"TestPropsSchema:TestGeomertric3dElementIsOfType\" },\n  };\n  const testGeometricElement3dId = sourceDb.elements.insertElement(testGeometricElement3d);\n  assert.isTrue(Id64.isValidId64(testGeometricElement3dId));\n\n  const testGeometricElement2d = {\n    classFullName: \"TestPropsSchema:TestGeomertric2dElement\",\n    model: drawingId,\n    code: Code.createEmpty(),\n    category: drawingCategoryId,\n    typeDefinition: { id: testPhysicalTypeId, relClassName: \"TestPropsSchema:TestGeomertric2dElementIsOfType\" },\n  };\n  const testGeometricElement2dId = sourceDb.elements.insertElement(testGeometricElement2d);\n  assert.isTrue(Id64.isValidId64(testGeometricElement2dId));\n\n  const derivedConcreteElement = {\n    classFullName: \"TestPropsSchema:DerivedConcreteElement\",\n    model: physicalModelId,\n    code: Code.createEmpty(),\n    category: spatialCategoryId,\n    Length: 20,\n    Width: 10,\n  };\n  const derivedConcreteElementId = sourceDb.elements.insertElement(derivedConcreteElement);\n  assert.isTrue(Id64.isValidId64(derivedConcreteElementId));\n}\n"]}